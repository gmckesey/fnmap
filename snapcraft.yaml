name: fnmap # you probably want to 'snapcraft register <name>'
title:  Flutter NMap GUI
base: core22 # the base snap is the execution environment for this snap
version: 1.3.1.1
summary: A GUI for nmap
license: GPL-2.0
compression: xz
source-code: https://github.com/gmckesey/fnmap
type: app
description: |
  fnmap is a GUI for nmap that runs and parses the output of nmap and provides
  different views of the data.
icon: assets/fnmap.png
grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

architectures:
  - build-on: [ amd64 ]

plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/share/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/share/icons
    default-provider: gtk-common-themes
  nmap:
    interface: content
    target: $SNAP/usr
    default-provider: nmap
    
slots:
  dbus-fnmap:
    interface: dbus
    bus: session
    name: com.krioltech.fnmap

apps:
  fnmap:
    command: fnmap
    common-id: com.krioltech.fnmap
    extensions: [gnome]
    plugs:
      - network
    slots:
      - dbus-fnmap
    environment:
      DBUS_SESSION_BUS_ADDRESS: $DBUS_SESSION_BUS_ADDRESS
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/blas

parts:
  fnmap:
    source: .
    plugin: flutter
    flutter-target: lib/main.dart # The main entry-point file of fnmap

  zenity-integration:
    plugin: nil
    stage-snaps:
      - zenity-integration
      
#  nmap:
#    stage-packages:
#    - nmap
#    plugin: nil



    
